// Code generated by protoc-gen-go.
// source: backend.proto
// DO NOT EDIT!

/*
Package backend is a generated protocol buffer package.

It is generated from these files:
	backend.proto

It has these top-level messages:
	RouteMSG
*/
package backend

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 指令 (Server -> Server)
type SS int32

const (
	SS_SS_UNKNOWN SS = 0
	SS_FORWARD    SS = 900
)

var SS_name = map[int32]string{
	0:   "SS_UNKNOWN",
	900: "FORWARD",
}
var SS_value = map[string]int32{
	"SS_UNKNOWN": 0,
	"FORWARD":    900,
}

func (x SS) String() string {
	return proto.EnumName(SS_name, int32(x))
}
func (SS) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RouteMSG struct {
	Sn                   uint32 `protobuf:"varint,1,opt,name=sn" json:"sn,omitempty"`
	FromClusterId        uint32 `protobuf:"varint,2,opt,name=from_cluster_id,json=fromClusterId" json:"from_cluster_id,omitempty"`
	FromServerCategory   uint32 `protobuf:"varint,3,opt,name=from_server_category,json=fromServerCategory" json:"from_server_category,omitempty"`
	FromServerId         uint32 `protobuf:"varint,4,opt,name=from_server_id,json=fromServerId" json:"from_server_id,omitempty"`
	TargetClusterId      uint32 `protobuf:"varint,5,opt,name=target_cluster_id,json=targetClusterId" json:"target_cluster_id,omitempty"`
	TargetServerCategory uint32 `protobuf:"varint,6,opt,name=target_server_category,json=targetServerCategory" json:"target_server_category,omitempty"`
	TargetServerId       uint32 `protobuf:"varint,7,opt,name=target_server_id,json=targetServerId" json:"target_server_id,omitempty"`
	MsgId                uint32 `protobuf:"varint,8,opt,name=msg_id,json=msgId" json:"msg_id,omitempty"`
	MsgRaw               []byte `protobuf:"bytes,9,opt,name=msg_raw,json=msgRaw,proto3" json:"msg_raw,omitempty"`
}

func (m *RouteMSG) Reset()                    { *m = RouteMSG{} }
func (m *RouteMSG) String() string            { return proto.CompactTextString(m) }
func (*RouteMSG) ProtoMessage()               {}
func (*RouteMSG) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RouteMSG) GetSn() uint32 {
	if m != nil {
		return m.Sn
	}
	return 0
}

func (m *RouteMSG) GetFromClusterId() uint32 {
	if m != nil {
		return m.FromClusterId
	}
	return 0
}

func (m *RouteMSG) GetFromServerCategory() uint32 {
	if m != nil {
		return m.FromServerCategory
	}
	return 0
}

func (m *RouteMSG) GetFromServerId() uint32 {
	if m != nil {
		return m.FromServerId
	}
	return 0
}

func (m *RouteMSG) GetTargetClusterId() uint32 {
	if m != nil {
		return m.TargetClusterId
	}
	return 0
}

func (m *RouteMSG) GetTargetServerCategory() uint32 {
	if m != nil {
		return m.TargetServerCategory
	}
	return 0
}

func (m *RouteMSG) GetTargetServerId() uint32 {
	if m != nil {
		return m.TargetServerId
	}
	return 0
}

func (m *RouteMSG) GetMsgId() uint32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *RouteMSG) GetMsgRaw() []byte {
	if m != nil {
		return m.MsgRaw
	}
	return nil
}

func init() {
	proto.RegisterType((*RouteMSG)(nil), "backend.RouteMSG")
	proto.RegisterEnum("backend.SS", SS_name, SS_value)
}

func init() { proto.RegisterFile("backend.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x91, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0xff, 0xe4, 0xb7, 0x49, 0xbd, 0x24, 0x69, 0xbc, 0x54, 0x9d, 0x65, 0x29, 0x22, 0xa1,
	0x0b, 0x11, 0xf4, 0x05, 0xa4, 0xa2, 0x04, 0x31, 0x85, 0x19, 0xa4, 0xcb, 0x90, 0x66, 0xc6, 0x10,
	0x34, 0x89, 0xcc, 0x4c, 0x2d, 0xee, 0x7d, 0x46, 0x9f, 0x47, 0x32, 0x09, 0x34, 0x76, 0x79, 0xcf,
	0xf7, 0x1d, 0x38, 0x70, 0xc1, 0xdf, 0x64, 0xf9, 0x9b, 0xa8, 0xf9, 0xd5, 0x87, 0x6c, 0x74, 0x83,
	0x6e, 0x7f, 0xce, 0x7f, 0x6c, 0x18, 0xd3, 0x66, 0xab, 0xc5, 0x33, 0x7b, 0xc4, 0x00, 0x6c, 0x55,
	0x13, 0x6b, 0x66, 0x45, 0x3e, 0xb5, 0x55, 0x8d, 0x97, 0x30, 0x79, 0x95, 0x4d, 0x95, 0xe6, 0xef,
	0x5b, 0xa5, 0x85, 0x4c, 0x4b, 0x4e, 0x6c, 0x03, 0xfd, 0x36, 0x5e, 0x76, 0x69, 0xcc, 0xf1, 0x1a,
	0xa6, 0xc6, 0x53, 0x42, 0x7e, 0x0a, 0x99, 0xe6, 0x99, 0x16, 0x45, 0x23, 0xbf, 0xc8, 0x7f, 0x23,
	0x63, 0xcb, 0x98, 0x41, 0xcb, 0x9e, 0xe0, 0x05, 0x04, 0xc3, 0x46, 0xc9, 0xc9, 0x91, 0x71, 0xbd,
	0xbd, 0x1b, 0x73, 0x5c, 0xc0, 0x89, 0xce, 0x64, 0x21, 0xf4, 0x70, 0xc1, 0xc8, 0x88, 0x93, 0x0e,
	0xec, 0x37, 0xdc, 0xc2, 0x59, 0xef, 0x1e, 0xae, 0x70, 0x4c, 0x61, 0xda, 0xd1, 0x83, 0x1d, 0x11,
	0x84, 0x7f, 0x5b, 0x25, 0x27, 0xae, 0xf1, 0x83, 0xa1, 0x1f, 0x73, 0x3c, 0x05, 0xa7, 0x52, 0x45,
	0xcb, 0xc7, 0x86, 0x8f, 0x2a, 0x55, 0xc4, 0x1c, 0xcf, 0xc1, 0x6d, 0x63, 0x99, 0xed, 0xc8, 0xf1,
	0xcc, 0x8a, 0x3c, 0xda, 0x5a, 0x34, 0xdb, 0x2d, 0xe6, 0x60, 0x33, 0x86, 0x01, 0x00, 0x63, 0xe9,
	0x4b, 0xf2, 0x94, 0xac, 0xd6, 0x49, 0xf8, 0x0f, 0x3d, 0x70, 0x1f, 0x56, 0x74, 0x7d, 0x47, 0xef,
	0xc3, 0x6f, 0x77, 0xe3, 0x98, 0x67, 0xdc, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd2, 0xad, 0xcf,
	0x3d, 0x9d, 0x01, 0x00, 0x00,
}
